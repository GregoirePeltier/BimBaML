package BimBamBouML.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SProperty;

public class Pattern_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    for (int i = 0; i < SPropertyOperations.getInteger(ctx.getPrimaryInput(), PROPS.iteration$Wsjw); i++) {
      for (SNode item : SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.sounds$WxpY)) {
        tgs.appendNode(item);
      }
    }
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink sounds$WxpY = MetaAdapterFactory.getContainmentLink(0x9cde07181d5f461dL, 0xaed55578dacf102eL, 0x120425afff1eb4aeL, 0x120425afff1eb4b1L, "sounds");
  }

  private static final class PROPS {
    /*package*/ static final SProperty iteration$Wsjw = MetaAdapterFactory.getProperty(0x9cde07181d5f461dL, 0xaed55578dacf102eL, 0x120425afff1eb4aeL, 0x120425afff1eb4afL, "iteration");
  }
}
